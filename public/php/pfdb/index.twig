{% extends "@templates/base-post.twig" %}

{% block article %}

    <p>What it is :</p>
    <ul>
        <li>Pure POO (php 5.3 required)</li>
        <li>Lightweight</li>
        <li>As fast as it can</li>
        <li>Extendable (interfaces, ...)</li>
    </ul>

    <p>What it is <em>not</em> :</p>
    <ul>
        <li>SQL database</li>
        <li>Relational database</li>
        <li>ORM</li>
        <li>DBDAL</li>
        <li>NoSQL Database (although Arnapou\PFDB can be used for light key/pair database)</li>
    </ul>

    <p>Disclaimer: <strong>do not use Arnapou\PFDB for huge file, you will naturally use lots of memory and CPU. It is
            not designed for huge files.</strong></p>
    <p>I have not the time to make documentation, code is enough simple and readable with php docs to be
        auto-documented.Examples are the best documentation you will find.</p>


    <h2 class="section-heading">Conditioning</h2>
    <pre><code>include 'src/autoload.php';

$storage = new \Arnapou\PFDB\Storage\PhpFileStorage($somePath);
$database = new \Arnapou\PFDB\Database($storage);

$table = $database-&gt;getTable('vehicle');

$condition = \Arnapou\PFDB\Condition\ConditionBuilder::createAnd()
    -&gt;greaterThan('price', 10000)
    -&gt;matchRegExp('model', '^C[0-9]+');

$iterator = $table-&gt;find($condition)
                  -&gt;sort(array('constructor' =&gt; true, 'model' =&gt; false))
                  -&gt;limit(0, 50);

foreach($iterator as $key =&gt; $row) {
    // do whatever you want
}
</code></pre>


    <h2 class="section-heading">Extending Conditions</h2>

    <p>Class: </p>
    <pre><code>class IsUppercaseCondition implements \Arnapou\PFDB\Condition\ConditionInterface {

    protected $field;

    public function __construct($field) {
        $this-&gt;field = $field;
    }

    public function match($key, $value) {
        if(!isset($value[$this-&gt;field]) {
            return false;
        }
        $testedValue = (string)$value[$this-&gt;field];
        $isUppercase = ($testedValue === strtoupper($testedValue));
        return $isUppercase;
    }

}
</code></pre>

    <p>Usage :</p>
    <pre><code>include 'src/autoload.php';

$storage = new \Arnapou\PFDB\Storage\PhpFileStorage($somePath);
$database = new \Arnapou\PFDB\Database($storage);

$table = $database-&gt;getTable('vehicle');

$condition = \Arnapou\PFDB\Condition\ConditionBuilder::createAnd()
    -&gt;add(new IsUppercaseCondition('model'));

foreach($table-&gt;find($condition) as $key =&gt; $row) {
    // do whatever you want
}
</code></pre>


    <h2 class="section-heading">Use PFDB Iterator out of storage context</h2>
    <pre><code>include 'src/autoload.php';

$array = array(
    array('name' =&gt; 'John', 'age' =&gt; 20),
    array('name' =&gt; 'Edith', 'age' =&gt; 25),
    array('name' =&gt; 'Steve', 'age' =&gt; 30),
    array('name' =&gt; 'Matthew', 'age' =&gt; 22),
);

$arrayIterator = new \Arnapou\PFDB\Iterator\ArrayIterator($array);
$condition = \Arnapou\PFDB\Condition\ConditionBuilder::createAnd()
    -&gt;greaterThan('age', 24);
$iterator = new \Arnapou\PFDB\Iterator\Iterator($arrayIterator, $condition);

foreach($iterator as $key =&gt; $row) {
    // do whatever you want
}
</code></pre>


    <h2 class="section-heading">Build your own storage</h2>
    <p>You want to use CSV file instead of php dumped array ?</p>
    <p>Easy : extends or implements your own storage and use it to load, store or delete data.</p>
    <p>Look at the existing storages and write your own.</p>

{% endblock %}
